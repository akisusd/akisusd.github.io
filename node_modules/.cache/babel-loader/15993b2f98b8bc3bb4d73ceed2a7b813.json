{"ast":null,"code":"export var fetchSongsPending = function fetchSongsPending() {\n  return {\n    type: 'FETCH_SONGS_PENDING'\n  };\n};\nexport var fetchSongsSuccess = function fetchSongsSuccess(songs) {\n  return {\n    type: 'FETCH_SONGS_SUCCESS',\n    songs: songs\n  };\n};\nexport var fetchSongsError = function fetchSongsError() {\n  return {\n    type: 'FETCH_SONGS_ERROR'\n  };\n};\nexport var fetchSongs = function fetchSongs(accessToken) {\n  return function (dispatch) {\n    var request = new Request(\"https://api.spotify.com/v1/me/player/recently-played\", {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + accessToken\n      })\n    });\n    dispatch(fetchSongsPending());\n    fetch(request).then(function (res) {\n      if (res.statusText === \"Unauthorized\") {\n        window.location.href = './';\n      }\n\n      return res.json();\n    }).then(function (res) {\n      dispatch(fetchSongsSuccess(res.items));\n    }).catch(function (err) {\n      dispatch(fetchSongsError(err));\n    });\n  };\n};","map":{"version":3,"sources":["/home/akos/Work/react/src/actions/songActions.js"],"names":["fetchSongsPending","type","fetchSongsSuccess","songs","fetchSongsError","fetchSongs","accessToken","dispatch","request","Request","headers","Headers","fetch","then","res","statusText","window","location","href","json","items","catch","err"],"mappings":"AAAA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AAC1C,SAAO;AACLF,IAAAA,IAAI,EAAE,qBADD;AAELE,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnC,SAAO;AACLH,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,WAAD,EAAiB;AACzC,SAAO,UAAAC,QAAQ,EAAI;AACjB,QAAMC,OAAO,GAAG,IAAIC,OAAJ,yDAAoE;AAClFC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,yBAAiB,YAAYL;AADV,OAAZ;AADyE,KAApE,CAAhB;AAMAC,IAAAA,QAAQ,CAACP,iBAAiB,EAAlB,CAAR;AAEAY,IAAAA,KAAK,CAACJ,OAAD,CAAL,CAAeK,IAAf,CAAoB,UAAAC,GAAG,EAAI;AACzB,UAAGA,GAAG,CAACC,UAAJ,KAAmB,cAAtB,EAAsC;AACpCC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,IAAvB;AACD;;AACD,aAAOJ,GAAG,CAACK,IAAJ,EAAP;AACD,KALD,EAKGN,IALH,CAKQ,UAAAC,GAAG,EAAI;AACbP,MAAAA,QAAQ,CAACL,iBAAiB,CAACY,GAAG,CAACM,KAAL,CAAlB,CAAR;AACD,KAPD,EAOGC,KAPH,CAOS,UAAAC,GAAG,EAAI;AACdf,MAAAA,QAAQ,CAACH,eAAe,CAACkB,GAAD,CAAhB,CAAR;AACD,KATD;AAUD,GAnBD;AAoBD,CArBM","sourcesContent":["export const fetchSongsPending = () => {\n  return {\n    type: 'FETCH_SONGS_PENDING'\n  };\n};\n\nexport const fetchSongsSuccess = (songs) => {\n  return {\n    type: 'FETCH_SONGS_SUCCESS',\n    songs\n  };\n};\n\nexport const fetchSongsError = () => {\n  return {\n    type: 'FETCH_SONGS_ERROR'\n  };\n};\n\nexport const fetchSongs = (accessToken) => {\n  return dispatch => {\n    const request = new Request(`https://api.spotify.com/v1/me/player/recently-played`, {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + accessToken\n      })\n    });\n\n    dispatch(fetchSongsPending());\n\n    fetch(request).then(res => {\n      if(res.statusText === \"Unauthorized\") {\n        window.location.href = './';\n      }\n      return res.json();\n    }).then(res => {\n      dispatch(fetchSongsSuccess(res.items));\n    }).catch(err => {\n      dispatch(fetchSongsError(err));\n    });\n  };\n};"]},"metadata":{},"sourceType":"module"}