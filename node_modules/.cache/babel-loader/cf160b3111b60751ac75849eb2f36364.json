{"ast":null,"code":"import _classCallCheck from \"/home/akos/Work/react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/akos/Work/react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/akos/Work/react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/akos/Work/react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/akos/Work/react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/akos/Work/react/src/containers/Spotify.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../actions/userActions';\nimport { fetchSongs } from '../actions/songActions';\nimport { setToken } from '../actions/tokenActions';\nimport SongList from '../components/SongList';\n\nvar Spotify =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Spotify, _Component);\n\n  function Spotify() {\n    _classCallCheck(this, Spotify);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Spotify).apply(this, arguments));\n  }\n\n  _createClass(Spotify, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var hashParams = {};\n      var e,\n          r = /([^&;=]+)=?([^&;]*)/g,\n          q = window.location.hash.substring(1);\n\n      while (e = r.exec(q)) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n      }\n\n      if (!hashParams.access_token) {\n        window.location.href = 'https://accounts.spotify.com/authorize?client_id=32e01da48975407b869e51284666b21a&response_type=token&redirect_uri=http://localhost:3000/spotify/callback';\n      } else {\n        this.props.setToken(hashParams.access_token);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.token) {\n        this.props.fetchUser(nextProps.token);\n        this.props.fetchSongs(nextProps.token);\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(SongList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Spotify;\n}(Component);\n\nSpotify.propTypes = {\n  token: PropTypes.string,\n  fetchUser: PropTypes.func,\n  fetchSongs: PropTypes.func,\n  setToken: PropTypes.func\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    token: state.tokenReducer.token\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser,\n    fetchSongs: fetchSongs,\n    setToken: setToken\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Spotify);","map":{"version":3,"sources":["/home/akos/Work/react/src/containers/Spotify.js"],"names":["React","Component","PropTypes","bindActionCreators","connect","fetchUser","fetchSongs","setToken","SongList","Spotify","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","access_token","href","props","nextProps","token","propTypes","string","func","mapStateToProps","state","tokenReducer","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;IAEMC,O;;;;;;;;;;;;;wCAEe;AAElB,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,CAAJ;AAAA,UAAOC,CAAC,GAAG,sBAAX;AAAA,UACEC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CADN;;AAEA,aAAQN,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAZ,EAAuB;AACrBH,QAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACD;;AAED,UAAG,CAACD,UAAU,CAACU,YAAf,EAA6B;AAC3BN,QAAAA,MAAM,CAACC,QAAP,CAAgBM,IAAhB,GAAuB,2JAAvB;AACD,OAFD,MAEO;AACL,aAAKC,KAAL,CAAWf,QAAX,CAAoBG,UAAU,CAACU,YAA/B;AACD;AAEF;;;8CAEyBG,S,EAAW;AACnC,UAAGA,SAAS,CAACC,KAAb,EAAoB;AACpB,aAAKF,KAAL,CAAWjB,SAAX,CAAqBkB,SAAS,CAACC,KAA/B;AACA,aAAKF,KAAL,CAAWhB,UAAX,CAAsBiB,SAAS,CAACC,KAAhC;AACC;;AAAA;AACF;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADC,CADF;AAKD;;;;EAhCoBvB,S;;AAmCtBQ,OAAO,CAACgB,SAAR,GAAoB;AAClBD,EAAAA,KAAK,EAAEtB,SAAS,CAACwB,MADC;AAEnBrB,EAAAA,SAAS,EAAEH,SAAS,CAACyB,IAFF;AAGnBrB,EAAAA,UAAU,EAAEJ,SAAS,CAACyB,IAHH;AAInBpB,EAAAA,QAAQ,EAAEL,SAAS,CAACyB;AAJD,CAApB;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAEjC,SAAO;AACLL,IAAAA,KAAK,EAAEK,KAAK,CAACC,YAAN,CAAmBN;AADrB,GAAP;AAID,CAND;;AAQA,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AAErC,SAAO7B,kBAAkB,CAAC;AAC1BE,IAAAA,SAAS,EAATA,SAD0B;AAE1BC,IAAAA,UAAU,EAAVA,UAF0B;AAG1BC,IAAAA,QAAQ,EAARA;AAH0B,GAAD,EAIvByB,QAJuB,CAAzB;AAMD,CARD;;AAUA,eAAe5B,OAAO,CAACwB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtB,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../actions/userActions';\nimport { fetchSongs } from '../actions/songActions';\nimport { setToken } from '../actions/tokenActions';\nimport SongList from '../components/SongList';\n\nclass Spotify extends Component {\n\t\n\tcomponentDidMount() {\n\n\t  let hashParams = {};\n\t  let e, r = /([^&;=]+)=?([^&;]*)/g,\n\t    q = window.location.hash.substring(1);\n\t  while ( e = r.exec(q)) {\n\t    hashParams[e[1]] = decodeURIComponent(e[2]);\n\t  }\n\n\t  if(!hashParams.access_token) {\n\t    window.location.href = 'https://accounts.spotify.com/authorize?client_id=32e01da48975407b869e51284666b21a&response_type=token&redirect_uri=http://localhost:3000/spotify/callback';\n\t  } else {\n\t    this.props.setToken(hashParams.access_token);\n\t  }\n\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t  if(nextProps.token) {\n\t\t\tthis.props.fetchUser(nextProps.token);\n\t\t\tthis.props.fetchSongs(nextProps.token);\n\t  };\n\t}\n\n\trender() {\n\t  return (\n\t    <div>\n\t\t\t\t<SongList/>\n\t    </div>\n\t  );\n\t}\n}\n\nSpotify.propTypes = {\n  token: PropTypes.string,\n\tfetchUser: PropTypes.func,\n\tfetchSongs: PropTypes.func,\n\tsetToken: PropTypes.func\n};\n\nconst mapStateToProps = (state) => {\n\n  return {\n    token: state.tokenReducer.token\n  };\n\n};\n\nconst mapDispatchToProps = dispatch => {\n\n  return bindActionCreators({\n\t\tfetchUser,\n\t\tfetchSongs,\n\t\tsetToken\n  },dispatch);\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Spotify);"]},"metadata":{},"sourceType":"module"}